---
import "../../styles/global.scss";
import Layout from '../../layouts/Layout.astro';
import { apiClient } from '../../api/api';

interface Author {
  name: string;
}

interface Post {
  id: number | string;
  title: string;
  slug: string;
  content: string;
  created_at: string;
  author?: Author;
  featured_image?: string;
  excerpt?: string;
  category?: string;
}

export async function getStaticPaths() {
  try {
    const response = await apiClient.get('/api/posts');
    const posts = (response?.data?.data || []) as Post[];
    
    return posts.map((post) => {
      const slug = post.slug || post.title.toLowerCase().replace(/[^\w]+/g, '-');
      return {
        params: { slug },
        props: { post },
      };
    });
  } catch (error) {
    console.error('Error fetching posts for static paths:', error);
    return [];
  }
}

const { post } = Astro.props as { post: Post };

if (!post) {
  return Astro.redirect('/blog');
}

console.log(post);
---

<Layout>
  <main class="blog-post">
    <div class="container">
      <article>
        <header>
          <h1>{post.title}</h1>
          <div class="meta">
            <time datetime={new Date(post.created_at).toISOString()}>
              {new Date(post.created_at).toLocaleDateString('pt-BR', {
                day: '2-digit',
                month: 'long',
                year: 'numeric'
              })}
            </time>
          </div>
          {post.featured_image && (
            <img 
              src={post.featured_image} 
              alt={post.title}
              class="featured-image"
              loading="lazy"
            />
          )}
        </header>
        
        <div class="content" set:html={post.content} />
        
        <footer>
          <a href="/blog" class="back-link">‚Üê Voltar para o blog</a>
        </footer>
      </article>
    </div>
  </main>
</Layout>

<style>
  .blog-post {
    padding: 2rem 0;
  }
  
  .container {
    max-width: 800px;
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }
  
  .meta {
    color: #666;
    margin-bottom: 2rem;
  }
  
  .featured-image {
    width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 2rem 0;
  }
  
  .content {
    line-height: 1.8;
    margin-bottom: 3rem;
  }
  
  .content :global(h2) {
    margin: 2rem 0 1rem;
    font-size: 1.8rem;
  }
  
  .content :global(p) {
    margin-bottom: 1.5rem;
  }
  
  .content :global(img) {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 1.5rem 0;
  }
  
  .back-link {
    display: inline-block;
    margin-top: 2rem;
    color: #2563eb;
    text-decoration: none;
    font-weight: 500;
  }
  
  .back-link:hover {
    text-decoration: underline;
  }
</style>
